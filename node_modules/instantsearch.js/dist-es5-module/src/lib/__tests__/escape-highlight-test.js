'use strict';

var _escapeHighlight = require('../escape-highlight');

var _escapeHighlight2 = _interopRequireDefault(_escapeHighlight);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('escapeHits()', function () {
  it('should escape highlighProperty simple text value', function () {
    var hits = [{
      _snippetResult: {
        foobar: {
          value: '<script>__ais-highlight__foobar__/ais-highlight__</script>'
        }
      },
      _highlightResult: {
        foobar: {
          value: '<script>__ais-highlight__foobar__/ais-highlight__</script>'
        }
      }
    }];

    expect((0, _escapeHighlight2.default)(hits)).toEqual([{
      _highlightResult: {
        foobar: {
          value: '&lt;script&gt;<em>foobar</em>&lt;/script&gt;'
        }
      },
      _snippetResult: {
        foobar: {
          value: '&lt;script&gt;<em>foobar</em>&lt;/script&gt;'
        }
      }
    }]);
  });

  it('should escape highlighProperty nested object value', function () {
    var hits = [{
      _highlightResult: {
        foobar: {
          value: {
            foo: '<script>__ais-highlight__bar__/ais-highlight__</script>',
            bar: '<script>__ais-highlight__foo__/ais-highlight__</script>'
          }
        }
      },
      _snippetResult: {
        foobar: {
          value: {
            foo: '<script>__ais-highlight__bar__/ais-highlight__</script>',
            bar: '<script>__ais-highlight__foo__/ais-highlight__</script>'
          }
        }
      }
    }];

    expect((0, _escapeHighlight2.default)(hits)).toEqual([{
      _highlightResult: {
        foobar: {
          value: {
            foo: '&lt;script&gt;<em>bar</em>&lt;/script&gt;',
            bar: '&lt;script&gt;<em>foo</em>&lt;/script&gt;'
          }
        }
      },
      _snippetResult: {
        foobar: {
          value: {
            foo: '&lt;script&gt;<em>bar</em>&lt;/script&gt;',
            bar: '&lt;script&gt;<em>foo</em>&lt;/script&gt;'
          }
        }
      }
    }]);
  });

  it('should escape highlighProperty array of string as value', function () {
    var hits = [{
      _highlightResult: {
        foobar: {
          value: ['<script>__ais-highlight__bar__/ais-highlight__</script>', '<script>__ais-highlight__foo__/ais-highlight__</script>']
        }
      },
      _snippetResult: {
        foobar: {
          value: ['<script>__ais-highlight__bar__/ais-highlight__</script>', '<script>__ais-highlight__foo__/ais-highlight__</script>']
        }
      }
    }];

    expect((0, _escapeHighlight2.default)(hits)).toEqual([{
      _highlightResult: {
        foobar: {
          value: ['&lt;script&gt;<em>bar</em>&lt;/script&gt;', '&lt;script&gt;<em>foo</em>&lt;/script&gt;']
        }
      },
      _snippetResult: {
        foobar: {
          value: ['&lt;script&gt;<em>bar</em>&lt;/script&gt;', '&lt;script&gt;<em>foo</em>&lt;/script&gt;']
        }
      }
    }]);
  });

  it('should not escape twice the same results', function () {
    var hits = [{
      _highlightResult: {
        foobar: {
          value: '<script>__ais-highlight__foo__/ais-highlight__</script>'
        }
      }
    }];

    (0, _escapeHighlight2.default)(hits);
    (0, _escapeHighlight2.default)(hits);

    var output = [{
      _highlightResult: {
        foobar: {
          value: '&lt;script&gt;<em>foo</em>&lt;/script&gt;'
        }
      }
    }];

    output.__escaped = true;

    expect(hits).toEqual(output);
  });
});