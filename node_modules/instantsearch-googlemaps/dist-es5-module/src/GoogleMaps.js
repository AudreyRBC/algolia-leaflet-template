/* global google */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactGoogleMaps = require('react-google-maps');

var _reactGoogleMapsLibAddonsMarkerClusterer = require('react-google-maps/lib/addons/MarkerClusterer');

var _reactGoogleMapsLibAddonsMarkerClusterer2 = _interopRequireDefault(_reactGoogleMapsLibAddonsMarkerClusterer);

var GoogleMaps = (function (_React$Component) {
  _inherits(GoogleMaps, _React$Component);

  function GoogleMaps() {
    _classCallCheck(this, GoogleMaps);

    _get(Object.getPrototypeOf(GoogleMaps.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(GoogleMaps, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var _this = this;

      return nextProps.zoom !== this.props.zoom || // user has changed zoom
      nextProps.markers.length !== this.props.markers.length || // different results number
      nextProps.markers.some(function (marker, markerIndex) {
        return (// same number of results, but different markers?
          _this.props.markers[markerIndex] === undefined || marker.id !== _this.props.markers[markerIndex].id
        );
      });
    }
  }, {
    key: '_shouldRefineOnMapInteraction',
    value: function _shouldRefineOnMapInteraction(fn) {
      if (this.props.refineOnMapInteraction === true) {
        return fn;
      }

      return function noop() {};
    }
  }, {
    key: '_userRefine',
    value: function _userRefine() {
      if (this.props.refineOnMapInteraction) {
        this.props.refine({
          bounds: this._map.getBounds(),
          center: this._map.getCenter(),
          zoom: this._map.getZoom()
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2['default'].createElement(_reactGoogleMaps.GoogleMapLoader, {
        containerElement: _react2['default'].createElement('div', { style: { height: '100%' } }),
        googleMapElement: _react2['default'].createElement(
          _reactGoogleMaps.GoogleMap,
          _extends({
            onDragend: this._userRefine.bind(this),
            onZoomChanged: this._userRefine.bind(this),
            ref: function (map) {
              return _this2._map = map;
            }
          }, this.props),
          _react2['default'].createElement(
            _reactGoogleMapsLibAddonsMarkerClusterer2['default'],
            {
              averageCenter: true,
              enableRetinaIcons: true,
              gridSize: 30
            },
            this.props.markers.map(function (marker) {
              return _react2['default'].createElement(_reactGoogleMaps.Marker, _extends({ key: marker.id }, marker));
            })
          )
        )
      });
    }
  }]);

  return GoogleMaps;
})(_react2['default'].Component);

GoogleMaps.propTypes = {
  center: _react2['default'].PropTypes.object, // google.maps.LatLng,
  markers: _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.shape({
    id: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
    label: _react2['default'].PropTypes.string,
    position: _react2['default'].PropTypes.object, // google.maps.LatLng
    title: _react2['default'].PropTypes.string
  })).isRequired,
  refine: _react2['default'].PropTypes.func.isRequired,
  refineOnMapInteraction: _react2['default'].PropTypes.bool,
  zoom: _react2['default'].PropTypes.number
};

exports['default'] = GoogleMaps;
module.exports = exports['default'];